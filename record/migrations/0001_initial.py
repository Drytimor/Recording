# Generated by Django 4.2.6 on 2023-10-16 11:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import project_recording.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[project_recording.validators.PhoneNumberValidator],
                    ),
                ),
                ("birth_date", models.DateField()),
                (
                    "hobby",
                    models.CharField(
                        choices=[
                            ("SP", "спорт"),
                            ("TR", "туризм"),
                            ("ED", "образование"),
                            ("SC", "наука"),
                            ("SN", "разное"),
                        ],
                        default="SN",
                        max_length=50,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        height_field=150,
                        null=True,
                        upload_to="photo_customer",
                        width_field=150,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "customer",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[project_recording.validators.PhoneNumberValidator],
                    ),
                ),
                ("firstname", models.CharField(max_length=255)),
                ("lastname", models.CharField(max_length=255)),
                ("profile", models.JSONField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        height_field=150,
                        null=True,
                        upload_to="photo_employee",
                        width_field=150,
                    ),
                ),
            ],
            options={
                "db_table": "employee",
            },
        ),
        migrations.CreateModel(
            name="Events",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "status_tariff",
                    models.CharField(
                        choices=[("PAID", "платно"), ("FREE", "бесплатно")],
                        max_length=4,
                    ),
                ),
                (
                    "status_opening",
                    models.CharField(
                        choices=[("OPEN", "открыт"), ("CLOSE", "закрыт")],
                        default="OPEN",
                        max_length=10,
                    ),
                ),
                ("limit_clients", models.PositiveSmallIntegerField()),
                ("quantity_clients", models.PositiveSmallIntegerField(default=0)),
                (
                    "price_event",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("events_employee", models.ManyToManyField(to="record.employee")),
            ],
            options={
                "db_table": "events",
            },
        ),
        migrations.CreateModel(
            name="HistoryRecordings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recording_id", models.PositiveBigIntegerField()),
                ("event_id", models.PositiveBigIntegerField()),
                ("customer_id", models.PositiveBigIntegerField()),
                (
                    "status_recording",
                    models.CharField(
                        choices=[("PAID", "оплачено"), ("CANC", "отменено")],
                        max_length=4,
                    ),
                ),
                ("date_recording", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "history_recording",
            },
        ),
        migrations.CreateModel(
            name="Recordings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="record.customer",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="record.events"
                    ),
                ),
            ],
            options={
                "db_table": "recordings",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[project_recording.validators.PhoneNumberValidator],
                    ),
                ),
                (
                    "activity",
                    models.CharField(
                        choices=[
                            ("SP", "спорт"),
                            ("TR", "туризм"),
                            ("ED", "образование"),
                            ("SC", "наука"),
                            ("SN", "разное"),
                        ],
                        default="SN",
                        max_length=50,
                    ),
                ),
                ("profile", models.JSONField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        height_field=150,
                        null=True,
                        upload_to="photo_organization",
                        width_field=150,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "organization",
            },
        ),
        migrations.AddField(
            model_name="events",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="record.organization"
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="record.organization"
            ),
        ),
        migrations.AddConstraint(
            model_name="recordings",
            constraint=models.UniqueConstraint(
                fields=("event", "customer"), name="unique_recording_customer"
            ),
        ),
        migrations.AddConstraint(
            model_name="events",
            constraint=models.CheckConstraint(
                check=models.Q(("quantity_clients__lte", models.F("limit_clients"))),
                name="check_quantity_clients",
            ),
        ),
        migrations.AddConstraint(
            model_name="events",
            constraint=models.CheckConstraint(
                check=models.Q(("limit_clients__gt", 0)), name="check_limit_clients"
            ),
        ),
    ]
